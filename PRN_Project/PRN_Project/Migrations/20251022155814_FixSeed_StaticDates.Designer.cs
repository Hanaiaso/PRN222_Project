// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRN_Project.Models;

#nullable disable

namespace PRN_Project.Migrations
{
    [DbContext(typeof(LmsDbContext))]
    [Migration("20251022155814_FixSeed_StaticDates")]
    partial class FixSeed_StaticDates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRN_Project.Models.Account", b =>
                {
                    b.Property<int>("AId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("AId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AId = 1,
                            Email = "admin@example.com",
                            Password = "Admin@123",
                            Role = 0,
                            Status = true
                        },
                        new
                        {
                            AId = 2,
                            Email = "teacher@example.com",
                            Password = "Teacher@123",
                            Role = 1,
                            Status = true
                        },
                        new
                        {
                            AId = 3,
                            Email = "student@example.com",
                            Password = "Student@123",
                            Role = 2,
                            Status = true
                        },
                        new
                        {
                            AId = 4,
                            Email = "student2@example.com",
                            Password = "Student@123",
                            Role = 2,
                            Status = true
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.Admin", b =>
                {
                    b.Property<int>("AdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdId"));

                    b.Property<int>("AId")
                        .HasColumnType("int");

                    b.Property<string>("AdName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AdId");

                    b.HasIndex("AId")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdId = 1,
                            AId = 1,
                            AdName = "Super Admin"
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.Answer", b =>
                {
                    b.Property<int>("AwId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AwId"));

                    b.Property<string>("AnswerContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EId")
                        .HasColumnType("int");

                    b.Property<int?>("ExamEId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("StudentSId")
                        .HasColumnType("int");

                    b.HasKey("AwId");

                    b.HasIndex("ExamEId");

                    b.HasIndex("StudentSId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            AwId = 1,
                            AnswerContent = "[\r\n                        { \"Question\": \"What is 2 + 2?\", \"Options\": [\"3\", \"4\", \"5\", \"6\"], \"CorrectAnswer\": \"4\" },\r\n                        { \"Question\": \"What is 10 / 2?\", \"Options\": [\"2\", \"5\", \"10\", \"20\"], \"CorrectAnswer\": \"5\" }\r\n                    ]",
                            CreatedAt = new DateTime(2025, 1, 3, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            EId = 1,
                            Status = true
                        },
                        new
                        {
                            AwId = 2,
                            AnswerContent = "[\r\n                        { \"Question\": \"He ___ to school every day.\", \"Options\": [\"go\", \"goes\", \"going\", \"gone\"], \"CorrectAnswer\": \"goes\" },\r\n                        { \"Question\": \"Which word is a noun?\", \"Options\": [\"run\", \"beautiful\", \"happiness\", \"quickly\"], \"CorrectAnswer\": \"happiness\" }\r\n                    ]",
                            CreatedAt = new DateTime(2025, 1, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            EId = 2,
                            Status = true
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.Exam", b =>
                {
                    b.Property<int>("EId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("SuId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectSuId")
                        .HasColumnType("int");

                    b.HasKey("EId");

                    b.HasIndex("SubjectSuId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            EId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            EName = "Math Midterm Exam",
                            EndTime = new DateTime(2025, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamContent = "[\r\n                        { \"Question\": \"What is 2 + 2?\", \"Options\": [\"3\", \"4\", \"5\", \"6\"], \"CorrectAnswer\": \"4\" },\r\n                        { \"Question\": \"What is 10 / 2?\", \"Options\": [\"2\", \"5\", \"10\", \"20\"], \"CorrectAnswer\": \"5\" }\r\n                    ]",
                            StartTime = new DateTime(2025, 1, 2, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            SuId = 1
                        },
                        new
                        {
                            EId = 2,
                            CreatedAt = new DateTime(2025, 1, 3, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            EName = "English Grammar Test",
                            EndTime = new DateTime(2025, 1, 4, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamContent = "[\r\n                        { \"Question\": \"He ___ to school every day.\", \"Options\": [\"go\", \"goes\", \"going\", \"gone\"], \"CorrectAnswer\": \"goes\" },\r\n                        { \"Question\": \"Which word is a noun?\", \"Options\": [\"run\", \"beautiful\", \"happiness\", \"quickly\"], \"CorrectAnswer\": \"happiness\" }\r\n                    ]",
                            StartTime = new DateTime(2025, 1, 4, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            SuId = 2
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.ExamRank", b =>
                {
                    b.Property<int>("ErId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErId"));

                    b.Property<int>("EId")
                        .HasColumnType("int");

                    b.Property<int?>("ExamEId")
                        .HasColumnType("int");

                    b.Property<int>("RaId")
                        .HasColumnType("int");

                    b.Property<int?>("RankRaId")
                        .HasColumnType("int");

                    b.Property<int>("SId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentSId")
                        .HasColumnType("int");

                    b.HasKey("ErId");

                    b.HasIndex("ExamEId");

                    b.HasIndex("RankRaId");

                    b.HasIndex("StudentSId");

                    b.ToTable("ExamRanks");

                    b.HasData(
                        new
                        {
                            ErId = 1,
                            EId = 1,
                            RaId = 1,
                            SId = 1
                        },
                        new
                        {
                            ErId = 2,
                            EId = 2,
                            RaId = 2,
                            SId = 2
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.Notification", b =>
                {
                    b.Property<int>("NtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NtId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("NtId");

                    b.HasIndex("SenderId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            NtId = 1,
                            Content = "We’re excited to have you here!",
                            SenderId = 1,
                            SentTime = new DateTime(2025, 1, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Welcome to the LMS System"
                        },
                        new
                        {
                            NtId = 2,
                            Content = "Don't forget your math exam this Friday at 8:00 AM.",
                            SenderId = 2,
                            SentTime = new DateTime(2025, 1, 7, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Upcoming Math Exam Reminder"
                        },
                        new
                        {
                            NtId = 3,
                            Content = "LMS will be under maintenance this weekend.",
                            SenderId = 1,
                            SentTime = new DateTime(2025, 1, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "System Maintenance"
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.NotificationReceiver", b =>
                {
                    b.Property<int>("NrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NrId"));

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int?>("NotificationNtId")
                        .HasColumnType("int");

                    b.Property<int>("NtId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.HasKey("NrId");

                    b.HasIndex("NotificationNtId");

                    b.HasIndex("ReceiverId");

                    b.ToTable("NotificationReceivers");

                    b.HasData(
                        new
                        {
                            NrId = 1,
                            IsRead = true,
                            NtId = 1,
                            ReceiverId = 3
                        },
                        new
                        {
                            NrId = 2,
                            IsRead = false,
                            NtId = 1,
                            ReceiverId = 4
                        },
                        new
                        {
                            NrId = 3,
                            IsRead = false,
                            NtId = 2,
                            ReceiverId = 3
                        },
                        new
                        {
                            NrId = 4,
                            IsRead = true,
                            NtId = 3,
                            ReceiverId = 2
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.Rank", b =>
                {
                    b.Property<int>("RaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaId"));

                    b.Property<float?>("MaxScore")
                        .HasColumnType("real");

                    b.Property<float?>("MinScore")
                        .HasColumnType("real");

                    b.Property<string>("RankName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RaId");

                    b.ToTable("Ranks");

                    b.HasData(
                        new
                        {
                            RaId = 1,
                            MaxScore = 10f,
                            MinScore = 8.5f,
                            RankName = "A"
                        },
                        new
                        {
                            RaId = 2,
                            MaxScore = 8.4f,
                            MinScore = 6.5f,
                            RankName = "B"
                        },
                        new
                        {
                            RaId = 3,
                            MaxScore = 6.4f,
                            MinScore = 4.5f,
                            RankName = "C"
                        },
                        new
                        {
                            RaId = 4,
                            MaxScore = 4.4f,
                            MinScore = 0f,
                            RankName = "D"
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.Student", b =>
                {
                    b.Property<int>("SId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SId"));

                    b.Property<int>("AId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SId");

                    b.HasIndex("AId")
                        .IsUnique();

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            SId = 1,
                            AId = 3,
                            Dob = new DateTime(2008, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Female",
                            SName = "Tran Thi C"
                        },
                        new
                        {
                            SId = 2,
                            AId = 4,
                            Dob = new DateTime(2008, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            SName = "Le Van D"
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.Subject", b =>
                {
                    b.Property<int>("SuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuId"));

                    b.Property<string>("SuName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SuId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SuId = 1,
                            SuName = "Mathematics"
                        },
                        new
                        {
                            SuId = 2,
                            SuName = "English"
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.Submit", b =>
                {
                    b.Property<int>("SbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SbId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EId")
                        .HasColumnType("int");

                    b.Property<int?>("ExamEId")
                        .HasColumnType("int");

                    b.Property<int>("SId")
                        .HasColumnType("int");

                    b.Property<double?>("Score")
                        .HasColumnType("float");

                    b.Property<int?>("StudentSId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmitTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("SbId");

                    b.HasIndex("ExamEId");

                    b.HasIndex("StudentSId");

                    b.ToTable("Submits");

                    b.HasData(
                        new
                        {
                            SbId = 1,
                            Comment = "Good performance",
                            Content = "[{\"QuestionIndex\":1,\"ChosenAnswer\":\"4\"},{\"QuestionIndex\":2,\"ChosenAnswer\":\"5\"}]",
                            EId = 1,
                            SId = 1,
                            Score = 9.0,
                            SubmitTime = new DateTime(2025, 1, 4, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SbId = 2,
                            Comment = "Needs to improve grammar",
                            Content = "[{\"QuestionIndex\":1,\"ChosenAnswer\":\"goes\"},{\"QuestionIndex\":2,\"ChosenAnswer\":\"run\"}]",
                            EId = 2,
                            SId = 2,
                            Score = 7.5,
                            SubmitTime = new DateTime(2025, 1, 6, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.Teacher", b =>
                {
                    b.Property<int>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TId"));

                    b.Property<int>("AId")
                        .HasColumnType("int");

                    b.Property<string>("Qualification")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TId");

                    b.HasIndex("AId")
                        .IsUnique();

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TId = 1,
                            AId = 2,
                            Qualification = "Master of Mathematics",
                            TName = "Nguyen Van B"
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.TeacherSubject", b =>
                {
                    b.Property<int>("TsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TsId"));

                    b.Property<int>("SuId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectSuId")
                        .HasColumnType("int");

                    b.Property<int>("TId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherTId")
                        .HasColumnType("int");

                    b.HasKey("TsId");

                    b.HasIndex("SubjectSuId");

                    b.HasIndex("TeacherTId");

                    b.HasIndex("TId", "SuId")
                        .IsUnique();

                    b.ToTable("TeacherSubjects");

                    b.HasData(
                        new
                        {
                            TsId = 1,
                            SuId = 1,
                            TId = 1
                        },
                        new
                        {
                            TsId = 2,
                            SuId = 2,
                            TId = 1
                        });
                });

            modelBuilder.Entity("PRN_Project.Models.Admin", b =>
                {
                    b.HasOne("PRN_Project.Models.Account", "Account")
                        .WithOne("Admin")
                        .HasForeignKey("PRN_Project.Models.Admin", "AId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PRN_Project.Models.Answer", b =>
                {
                    b.HasOne("PRN_Project.Models.Exam", "Exam")
                        .WithMany("Answers")
                        .HasForeignKey("ExamEId");

                    b.HasOne("PRN_Project.Models.Student", null)
                        .WithMany("Answers")
                        .HasForeignKey("StudentSId");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("PRN_Project.Models.Exam", b =>
                {
                    b.HasOne("PRN_Project.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectSuId");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("PRN_Project.Models.ExamRank", b =>
                {
                    b.HasOne("PRN_Project.Models.Exam", "Exam")
                        .WithMany("ExamRanks")
                        .HasForeignKey("ExamEId");

                    b.HasOne("PRN_Project.Models.Rank", "Rank")
                        .WithMany("ExamRanks")
                        .HasForeignKey("RankRaId");

                    b.HasOne("PRN_Project.Models.Student", "Student")
                        .WithMany("ExamRanks")
                        .HasForeignKey("StudentSId");

                    b.Navigation("Exam");

                    b.Navigation("Rank");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PRN_Project.Models.Notification", b =>
                {
                    b.HasOne("PRN_Project.Models.Account", "Sender")
                        .WithMany("SentNotifications")
                        .HasForeignKey("SenderId");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("PRN_Project.Models.NotificationReceiver", b =>
                {
                    b.HasOne("PRN_Project.Models.Notification", "Notification")
                        .WithMany("Receivers")
                        .HasForeignKey("NotificationNtId");

                    b.HasOne("PRN_Project.Models.Account", "Receiver")
                        .WithMany("NotificationReceivers")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("PRN_Project.Models.Student", b =>
                {
                    b.HasOne("PRN_Project.Models.Account", "Account")
                        .WithOne("Student")
                        .HasForeignKey("PRN_Project.Models.Student", "AId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PRN_Project.Models.Submit", b =>
                {
                    b.HasOne("PRN_Project.Models.Exam", "Exam")
                        .WithMany("Submits")
                        .HasForeignKey("ExamEId");

                    b.HasOne("PRN_Project.Models.Student", "Student")
                        .WithMany("Submits")
                        .HasForeignKey("StudentSId");

                    b.Navigation("Exam");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PRN_Project.Models.Teacher", b =>
                {
                    b.HasOne("PRN_Project.Models.Account", "Account")
                        .WithOne("Teacher")
                        .HasForeignKey("PRN_Project.Models.Teacher", "AId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PRN_Project.Models.TeacherSubject", b =>
                {
                    b.HasOne("PRN_Project.Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectSuId");

                    b.HasOne("PRN_Project.Models.Teacher", "Teacher")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TeacherTId");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("PRN_Project.Models.Account", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("NotificationReceivers");

                    b.Navigation("SentNotifications");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("PRN_Project.Models.Exam", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("ExamRanks");

                    b.Navigation("Submits");
                });

            modelBuilder.Entity("PRN_Project.Models.Notification", b =>
                {
                    b.Navigation("Receivers");
                });

            modelBuilder.Entity("PRN_Project.Models.Rank", b =>
                {
                    b.Navigation("ExamRanks");
                });

            modelBuilder.Entity("PRN_Project.Models.Student", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("ExamRanks");

                    b.Navigation("Submits");
                });

            modelBuilder.Entity("PRN_Project.Models.Subject", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("TeacherSubjects");
                });

            modelBuilder.Entity("PRN_Project.Models.Teacher", b =>
                {
                    b.Navigation("TeacherSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
