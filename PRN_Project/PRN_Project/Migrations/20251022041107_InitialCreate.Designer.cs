// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRN_Project.Models;

#nullable disable

namespace PRN_Project.Migrations
{
    [DbContext(typeof(LmsDbContext))]
    [Migration("20251022041107_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRN_Project.Models.Account", b =>
                {
                    b.Property<int>("AId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("AId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("PRN_Project.Models.Admin", b =>
                {
                    b.Property<int>("AdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdId"));

                    b.Property<int>("AId")
                        .HasColumnType("int");

                    b.Property<string>("AdName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AdId");

                    b.HasIndex("AId")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("PRN_Project.Models.Answer", b =>
                {
                    b.Property<int>("AwId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AwId"));

                    b.Property<string>("AnswerContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QId")
                        .HasColumnType("int");

                    b.Property<int>("SId")
                        .HasColumnType("int");

                    b.HasKey("AwId");

                    b.HasIndex("QId");

                    b.HasIndex("SId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("PRN_Project.Models.Exam", b =>
                {
                    b.Property<int>("EId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("SuId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectSuId")
                        .HasColumnType("int");

                    b.HasKey("EId");

                    b.HasIndex("SubjectSuId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("PRN_Project.Models.Notification", b =>
                {
                    b.Property<int>("NtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NtId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("NtId");

                    b.HasIndex("SenderId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("PRN_Project.Models.NotificationReceiver", b =>
                {
                    b.Property<int>("NrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NrId"));

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("NtId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.HasKey("NrId");

                    b.HasIndex("NtId");

                    b.HasIndex("ReceiverId");

                    b.ToTable("NotificationReceivers");
                });

            modelBuilder.Entity("PRN_Project.Models.Question", b =>
                {
                    b.Property<int>("QId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EId")
                        .HasColumnType("int");

                    b.HasKey("QId");

                    b.HasIndex("EId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("PRN_Project.Models.Rank", b =>
                {
                    b.Property<int>("RaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaId"));

                    b.Property<int>("EId")
                        .HasColumnType("int");

                    b.Property<string>("RankName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RankOrder")
                        .HasColumnType("int");

                    b.Property<int>("SId")
                        .HasColumnType("int");

                    b.HasKey("RaId");

                    b.HasIndex("EId");

                    b.HasIndex("SId");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("PRN_Project.Models.Student", b =>
                {
                    b.Property<int>("SId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SId"));

                    b.Property<int>("AId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SId");

                    b.HasIndex("AId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("PRN_Project.Models.Subject", b =>
                {
                    b.Property<int>("SuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuId"));

                    b.Property<string>("SuName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SuId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("PRN_Project.Models.Submit", b =>
                {
                    b.Property<int>("SbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SbId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EId")
                        .HasColumnType("int");

                    b.Property<int>("SId")
                        .HasColumnType("int");

                    b.Property<double?>("Score")
                        .HasColumnType("float");

                    b.Property<DateTime>("SubmitTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("SbId");

                    b.HasIndex("EId");

                    b.HasIndex("SId");

                    b.ToTable("Submits");
                });

            modelBuilder.Entity("PRN_Project.Models.Teacher", b =>
                {
                    b.Property<int>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TId"));

                    b.Property<int>("AId")
                        .HasColumnType("int");

                    b.Property<string>("Qualification")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TId");

                    b.HasIndex("AId")
                        .IsUnique();

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("PRN_Project.Models.TeacherSubject", b =>
                {
                    b.Property<int>("TsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TsId"));

                    b.Property<int>("SuId")
                        .HasColumnType("int");

                    b.Property<int>("TId")
                        .HasColumnType("int");

                    b.HasKey("TsId");

                    b.HasIndex("SuId");

                    b.HasIndex("TId", "SuId")
                        .IsUnique();

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("PRN_Project.Models.Admin", b =>
                {
                    b.HasOne("PRN_Project.Models.Account", "Account")
                        .WithOne("Admin")
                        .HasForeignKey("PRN_Project.Models.Admin", "AId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PRN_Project.Models.Answer", b =>
                {
                    b.HasOne("PRN_Project.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRN_Project.Models.Student", "Student")
                        .WithMany("Answers")
                        .HasForeignKey("SId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PRN_Project.Models.Exam", b =>
                {
                    b.HasOne("PRN_Project.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectSuId");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("PRN_Project.Models.Notification", b =>
                {
                    b.HasOne("PRN_Project.Models.Account", "Sender")
                        .WithMany("SentNotifications")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("PRN_Project.Models.NotificationReceiver", b =>
                {
                    b.HasOne("PRN_Project.Models.Notification", "Notification")
                        .WithMany("Receivers")
                        .HasForeignKey("NtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRN_Project.Models.Account", "Receiver")
                        .WithMany("NotificationReceivers")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("PRN_Project.Models.Question", b =>
                {
                    b.HasOne("PRN_Project.Models.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("EId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("PRN_Project.Models.Rank", b =>
                {
                    b.HasOne("PRN_Project.Models.Exam", "Exam")
                        .WithMany("Ranks")
                        .HasForeignKey("EId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRN_Project.Models.Student", "Student")
                        .WithMany("Ranks")
                        .HasForeignKey("SId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PRN_Project.Models.Student", b =>
                {
                    b.HasOne("PRN_Project.Models.Account", "Account")
                        .WithOne("Student")
                        .HasForeignKey("PRN_Project.Models.Student", "AId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PRN_Project.Models.Submit", b =>
                {
                    b.HasOne("PRN_Project.Models.Exam", "Exam")
                        .WithMany("Submits")
                        .HasForeignKey("EId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRN_Project.Models.Student", "Student")
                        .WithMany("Submits")
                        .HasForeignKey("SId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PRN_Project.Models.Teacher", b =>
                {
                    b.HasOne("PRN_Project.Models.Account", "Account")
                        .WithOne("Teacher")
                        .HasForeignKey("PRN_Project.Models.Teacher", "AId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PRN_Project.Models.TeacherSubject", b =>
                {
                    b.HasOne("PRN_Project.Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRN_Project.Models.Teacher", "Teacher")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("PRN_Project.Models.Account", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("NotificationReceivers");

                    b.Navigation("SentNotifications");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("PRN_Project.Models.Exam", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Ranks");

                    b.Navigation("Submits");
                });

            modelBuilder.Entity("PRN_Project.Models.Notification", b =>
                {
                    b.Navigation("Receivers");
                });

            modelBuilder.Entity("PRN_Project.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("PRN_Project.Models.Student", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Ranks");

                    b.Navigation("Submits");
                });

            modelBuilder.Entity("PRN_Project.Models.Subject", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("TeacherSubjects");
                });

            modelBuilder.Entity("PRN_Project.Models.Teacher", b =>
                {
                    b.Navigation("TeacherSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
